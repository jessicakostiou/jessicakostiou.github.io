//Jessica Kostiou, Courtney Locke, Zoe Liu
//SE352 Final Project
//Amigobot Demo- Single Ladies Dance
//Spring 2014


#include "stdafx.h"
#include "Aria.h"
#include <strsafe.h> 
#include <stdio.h> 
#include <process.h>
#include <windows.h>

long globalVar;
DWORD WINAPI Threadfun(void *pPM);

const int THREAD_NUM = 4;

HANDLE            g_hThreadParameter;
CRITICAL_SECTION  cs_global;

int argc;
char **argv;


void createRobot(char * address) {

  Aria::init();
  ArArgumentParser parser(&argc, argv);
  parser.loadDefaultArguments();
  parser.addDefaultArgument(address);
  ArRobot robot;

  ArRobotConnector robotConnector(&parser, &robot);
  if(!robotConnector.connectRobot())
  {
    ArLog::log(ArLog::Terse, "simpleConnect: Could not connect to the robot.");
    if(parser.checkHelpAndWarnUnparsed())
    {
        // -help not given
        Aria::logOptions();
        Aria::exit(1);
    }
  }

  if (!Aria::parseArgs() || !parser.checkHelpAndWarnUnparsed())
  {
    Aria::logOptions();
    Aria::exit(1);
  }

  ArLog::log(ArLog::Normal, "simpleConnect: Connected.");
  robot.runAsync(true);

  //start action
  // ******** around ***********
  	ArLog::log(ArLog::Normal, "All the single ladies");//1
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(360);
	robot.unlock();
	ArUtil::sleep(1200);
	ArLog::log(ArLog::Normal, "All the single ladies");//1
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(-360);
	robot.unlock();
	ArUtil::sleep(1200);
	ArLog::log(ArLog::Normal, "All the single ladies");//1
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(360);
	robot.unlock();
	ArUtil::sleep(1200);
	ArLog::log(ArLog::Normal, "All the single ladies");//1
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(-360);
	robot.unlock();
	ArUtil::sleep(1200);
	ArLog::log(ArLog::Normal, "All the single ladies");//2
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(360);
	robot.unlock();
	ArUtil::sleep(1200);
	ArLog::log(ArLog::Normal, "All the single ladies");//2
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(-360);
	robot.unlock();
	ArUtil::sleep(1200);
	ArLog::log(ArLog::Normal, "All the single ladies");//3
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(360);
	robot.unlock();
	ArUtil::sleep(1200);
	ArLog::log(ArLog::Normal, "All the single ladies");//3
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(360);
	robot.unlock();
	ArUtil::sleep(1200);
	ArLog::log(ArLog::Normal, "Now put you hands up!");//4
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(-360);
	robot.unlock();
	ArUtil::sleep(1200);
	ArLog::log(ArLog::Normal, "Up in the club, we just broke up, I'm doing my own little thing");//4
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(-360);
	robot.unlock();
	ArUtil::sleep(1200);
	ArLog::log(ArLog::Normal, "You decided to dip but now you wanna trip, Cause another brother noticed me");
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(360);
	robot.unlock();
	ArUtil::sleep(1200);
	ArLog::log(ArLog::Normal, "I'm up on him, he up on me, don't pay him any attention");
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(0);
	robot.setVel(-150);
	robot.unlock();
	ArUtil::sleep(4000);
	ArLog::log(ArLog::Normal, "Cause if you liked it then you should have put a ring on it");//4
	robot.lock();
	robot.enableMotors();
	robot.setVel(150);
	robot.unlock();
	ArUtil::sleep(5000);
	ArLog::log(ArLog::Normal, "If you liked it then you should've put a ring on it");//4
	robot.lock();
	robot.enableMotors();
	robot.setVel(150);
	robot.setRotVel(360);
	robot.unlock();
	ArUtil::sleep(5000);
	ArLog::log(ArLog::Normal, "Don't be mad once you see that he want it");//4
	robot.lock();
	robot.enableMotors();
	robot.setVel(150);
	robot.setRotVel(-360);
	robot.unlock();
	ArUtil::sleep(5000);
	ArLog::log(ArLog::Normal, "...");//1
	robot.lock();
	robot.enableMotors();
	robot.setVel(-150);
	robot.setRotVel(360);
	robot.unlock();
	ArUtil::sleep(5000);
	ArLog::log(ArLog::Normal, "If you liked it then you should've put a ring on it");//1
	robot.lock();
	robot.enableMotors();
	robot.setVel(-150);
	robot.setRotVel(-360);
	robot.unlock();
	ArUtil::sleep(4000);
	robot.setVel(0);
	ArLog::log(ArLog::Normal, "Wuh uh oh uh uh oh oh uh oh uh uh oh");//1
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(150);
	robot.unlock();
	ArUtil::sleep(1500);
	ArLog::log(ArLog::Normal, "...");//1
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(-150);
	robot.unlock();
	ArUtil::sleep(1500);
	ArLog::log(ArLog::Normal, "Wuh uh oh uh uh oh oh uh oh uh uh oh");//1
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(360);
	robot.unlock();
	ArUtil::sleep(1500);
	ArLog::log(ArLog::Normal, "...");//1
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(-360);
	robot.unlock();
	ArUtil::sleep(1500);
	ArLog::log(ArLog::Normal, "Wuh uh oh uh uh oh oh uh oh uh uh oh");//1
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(150);
	robot.unlock();
	ArUtil::sleep(1500);
	ArLog::log(ArLog::Normal, "...");//1
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(-150);
	robot.unlock();
	ArUtil::sleep(1500);
	ArLog::log(ArLog::Normal, "Wuh uh oh uh uh oh oh uh oh uh uh oh");//1
	robot.lock();
	robot.enableMotors();
	robot.setRotVel(360);
	robot.unlock();
	ArUtil::sleep(1500);
	ArLog::log(ArLog::Normal, "Don't be mad once you see that he want it");//4
	robot.lock();
	robot.enableMotors();
	robot.setVel(150);
	robot.setRotVel(-360);
	robot.unlock();
	ArUtil::sleep(5000);
	ArLog::log(ArLog::Normal, "...");//1
	robot.lock();
	robot.enableMotors();
	robot.setVel(-150);
	robot.setRotVel(360);
	robot.unlock();
	ArUtil::sleep(5000);
	ArLog::log(ArLog::Normal, "I got gloss on my lips, a man on my hips");//1
	robot.lock();
	robot.enableMotors();
	robot.setVel(-150);
	robot.setRotVel(-360);
	robot.unlock();
	ArUtil::sleep(4000);
	ArLog::log(ArLog::Normal, "Hold me tighter than my Dereon jeans");//1
	robot.lock();
	robot.enableMotors();
	robot.setVel(-150);
	robot.setRotVel(360);
	robot.unlock();
	ArUtil::sleep(4000);
	
	
	//verse
	

  //exit robot
  robot.lock();
	ArLog::log(ArLog::Normal, "simpleConnect: Pose=(%.2f,%.2f,%.2f), Trans. Vel=%.2f, Battery=%.2fV",
	robot.getX(), robot.getY(), robot.getTh(), robot.getVel(), robot.getBatteryVoltage());
	robot.unlock();
	ArLog::log(ArLog::Normal, "simpleConnect: Sleeping for 3 seconds...");
	ArUtil::sleep(1000);
	ArLog::log(ArLog::Normal, "simpleConnect: Ending robot thread...");
	robot.stopRunning();
	robot.waitForRunExit();
	ArLog::log(ArLog::Normal, "simpleConnect: Exiting.");
	Aria::exit(0);
	//end exit
}

int main(int argc, char **argv)
{
	g_hThreadParameter = CreateSemaphore(NULL, 0, 1, NULL);
	InitializeCriticalSection(&cs_global);

	HANDLE  handle[THREAD_NUM];	
	globalVar = 0;
	int i = 0;
	
	//Send to robots
	char* address[3] = {"-rh 10.0.126.12", "-rh 10.0.126.15", "-rh 10.0.126.13"}; 

	while (i < 3) {
		handle[i] = CreateThread(NULL, 0, Threadfun, &(address[i]), 0, NULL);
//		WaitForSingleObject(g_hThreadParameter, INFINITE);
		i++;
	}


	WaitForMultipleObjects(THREAD_NUM, handle, TRUE, INFINITE);

	DeleteCriticalSection(&cs_global);
	CloseHandle(g_hThreadParameter);
	
	for (i = 0; i < 3; i++)
		CloseHandle(handle[i]);

	system("Pause");
	return 0;
}

DWORD WINAPI Threadfun (void *pPM)
{
	char* address = *(char**)pPM;
	createRobot(address);

	return 0;
}
